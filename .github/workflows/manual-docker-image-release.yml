name: Manual Docker Image Release (auto from package.json)

on:
  workflow_dispatch: {}

permissions:
  contents: read

env:
  # 用“昨天 release 的仓库名”先测试；之后他们自己改即可
  IMAGE_NAME: garenmtech1981/wms

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read version from package.json
        id: ver
        shell: bash
        run: |
          if [ ! -f package.json ]; then
            echo "::error::package.json not found at repository root"
            exit 1
          fi

          VERSION=$(node -e "try{console.log(require('./package.json').version || '')}catch(e){process.exit(1)}")
          echo "package.json version: $VERSION"

          VERSION="${VERSION#v}"   # 容忍 v2.3.4，统一去掉 v

          # 简单 semver 校验（允许预发布/构建后缀）
          if ! echo "$VERSION" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+([\-+].*)?$'; then
            echo "::error::Invalid semver version: $VERSION"
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          docker build \
            -t "${{ env.IMAGE_NAME }}:${{ env.VERSION }}" \
            -t "${{ env.IMAGE_NAME }}:latest" \
            .

      - name: Push image
        run: |
          docker push "${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          docker push "${{ env.IMAGE_NAME }}:latest"

      - name: Summary
        run: echo "Pushed $IMAGE_NAME:${VERSION} and $IMAGE_NAME:latest"
